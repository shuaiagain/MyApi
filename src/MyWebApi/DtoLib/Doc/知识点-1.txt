1.类
	1.1类的构造函数
		

		
	1.2类的初始化顺序
		（1）子类静态字段
		（2）子类静态构造函数
		（3）子类非静态字段
		（4）父类静态字段
		（5）父类静态构造函数
		（6）父类非静态字段
		（7）父类构造函数
		（8）子类构造函数

	1.3类、成员的访问级别
				1.3.1 C# 方法默认访问级别 : private  
				1.3.2 类默认访问级别 : internal  
				1.3.3 命名空间下的元素的默认访问修饰符
					public : 同一程序集的其他任何代码或引用该程序集的其他程序集都可以访问该类型或成员。
					internal : 同一程序集中的任何代码都可以访问该类型或成员，但其他程序集不可以访问。 

				1.3.4 各类型中的成员的默认访问修饰符
					剩下的修饰符主要是正对继承这个语言特性的,拥有继承的类型有两个类(class)和接口(interface)。public,internal同样可以用于类型成员。
					private : 同一类和结构的代码可以访问该类型和成员。
					protected : 同一类和派生(继承特性)类中的代码可以访问该类型和成员。
					protected internal :  同一程序集中的任何代码或其他程序集中的任何派生类都可以访问该类型或成员。

				1.3.5 MSDN提示 ：
					1.) 派生类的可访问性不能高于其基类型。换句话说，不能有从内部类 A 派生的公共类 B。如果允许这种情况，将会使 A 成为公共类，因为 A 的所有受保护的成员或内部成员都可以从派生类访问。 
					2.) 成员的可访问性决不能高于其包含类型的可访问性。 
					3.) 可以使用五种访问类型中的任何一种来声明类成员（包括嵌套的类和结构）。 

				1.3.6 接口(interface)
					接口成员访问修饰符默认为public,且不能显示使用访问修饰符。

				1.3.7 类(class)
					构造函数默认为public访问修饰符。
					析构函数不能显示使用访问修饰符且默认为private访问修饰符。 
					类的成员默认访问修饰符为private; 

				1.3.8 枚举(enum)
					枚举类型成员默认为public访问修饰符，且不能显示使用修饰符。

				1.3.9 结构(struct) 
					结构成员默认为private修饰符。 
					结构成员无法声明为protected成员，因为结构不支持继承。 

				1.3.10 嵌套类型
					嵌套类型的默认访问修饰符为private。 和类，结构的成员默认访问类型一致。
		
	1.4抽象类，接口
	https://www.cnblogs.com/sunzhenyong/p/3814910.html
	https://www.cnblogs.com/solan/archive/2012/08/01/CSharp06.html

	1.5属性-字段-自动属性
	
	1.6反射

2.关键字
	2.1 const,static,readonly
	2.2 ref,out
		2.2.1 CLR默认所有方法参数都传值。传递引用类型的对象时，对象引用(或者说指向对象的指针)被传给方法。
		注意引用(或指针)本身是传值的，意味着方法能修改对象，而调用这能看到这些修改。对于值类型的实例，
		传给方法的是实例的一个副本，意味着方法将获得它专用的一个值类型实例副本，调用者中的实例不受影响。
		2.2.2 CLR允许以传引用而非传值的方式传递参数。C#用关键字out或ref支持这个功能。
	
	2.3 as,is
	2.4 params，
	2.5 equals,==差别，重写GetHashCode方法（重写Equals方法必须重写GetHashCode方法，否则发生警告）
		  https://www.cnblogs.com/xiaochen-vip8/p/5506478.html
		  https://www.cnblogs.com/changbaishan/p/10579021.html
	2.6 lock
		 https://www.cnblogs.com/edisonchou/p/4848131.html

3.单例模式
 （1）线程安全吗？
https://www.cnblogs.com/TomXu/archive/2011/12/19/2291448.html
https://www.cnblogs.com/zhili/p/SingletonPatterm.html

4.await,async(状态机)
	4.1用法：
	https://www.cnblogs.com/yilezhu/p/10555849.html
	https://www.cnblogs.com/landeanfen/p/4734252.html

	4.2原理：
	https://www.cnblogs.com/brookshi/p/5240510.html
	https://www.cnblogs.com/huangxincheng/p/13558006.html
	https://blog.csdn.net/lindexi_gd/article/details/100174692
	https://www.cnblogs.com/ryzen/p/13938188.html
	https://www.cnblogs.com/heyuquan/archive/2013/04/26/3045827.html
	https://www.cnblogs.com/johnyong/p/14089110.html
	https://blog.stephencleary.com/2013/11/there-is-no-thread.html

5.委托
https://www.cnblogs.com/jackson0714/p/5111347.html

6.线程
https://www.cnblogs.com/johnyong/p/14089110.html
https://www.cnblogs.com/edisonchou/p/4848131.html
https://www.cnblogs.com/anding/p/5301754.html
https://www.cnblogs.com/JimmyZheng/archive/2012/06/10/2543143.html
https://www.cnblogs.com/zhili/category/385032.html
https://www.cnblogs.com/yunfeifei/p/4122084.html
https://www.cnblogs.com/heyuquan/archive/2013/04/26/3045827.html

	6.1前台线程和后台线程的区别
		(1)所有前台线程结束，应用程序才会结束
		(2)所有前台线程结束后，后台线程会自动结束
		(3)前台线程执行完毕后，不用管后台线程是否结束，应用程序可以直接退出

7.orm
https://www.cnblogs.com/farb/p/IntroductionToEF.html
https://www.cnblogs.com/lsxqw2004/p/4701979.html
https://www.cnblogs.com/guomingfeng/archive/2013/05/19/mvc-overall-design.html
https://www.cnblogs.com/zhaopei/p/5721789.html

8.asp.net http请求管道
https://www.cnblogs.com/refactor/archive/2012/07/06/2568742.html
https://blog.csdn.net/overmaker/article/details/2096859
https://www.cnblogs.com/cmblogs/p/3952008.html
https://www.cnblogs.com/hexu6788/archive/2012/05/28/2520712.html
https://www.cnblogs.com/gougou1981/p/9830668.html

9..net内存分配
https://www.cnblogs.com/cheshui/archive/2012/09/29/2707910.html
https://kb.cnblogs.com/page/42318/3/

10.ado.net 
https://www.cnblogs.com/yangcaogui/archive/2012/06/09/2537086.html

11..net平台基础及常用框架
https://www.cnblogs.com/JimmyZhang/archive/2012/11/27/2790759.html
https://www.cnblogs.com/hgmyz/p/5313983.html

12..NET Core 事件总线,分布式事务解决方案：CAP
https://www.cnblogs.com/savorboard/p/cap.html

13..net core
https://www.cnblogs.com/heyuquan/p/dotnet-advance-learning-resource.html

14.文件操作
https://www.cnblogs.com/yukaizhao/archive/2011/07/27/system-io-file.html

15.各种工具类
https://github.com/Jimmey-Jiang/Common.Utility