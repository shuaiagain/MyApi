<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ include file="ModelAuto.ttinclude"#>
<#@ output extension=".cs" #>

<# var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = Path.GetDirectoryName(Host.TemplateFile)}; #>
<#
    //数据库连接
    string connectionString ="Data Source=172.16.20.249;Initial Catalog=JM_User;User ID=sa;Password=Gj2017";
    SqlConnection conn = new SqlConnection(connectionString);
    conn.Open();
    //查询表
    System.Data.DataTable schema = conn.GetSchema("TABLES");
    string selectQuery = "select * from @tableName";   //查询表语句
    SqlCommand command = new SqlCommand(selectQuery,conn);
    SqlDataAdapter ad = new SqlDataAdapter(command);
    System.Data.DataSet ds = new DataSet();
    //查询字段
    string propQuery = "SELECT 表名=sobj.name,字段名=scol.name,字段说明=sprop.[value] FROM syscolumns as scol inner join sys.sysobjects as sobj on scol.id=sobj.id and sobj.xtype='U' and sobj.name<>'dtproperties' left join sys.extended_properties as sprop on scol.id=sprop.major_id and scol.colid=sprop.minor_id where sobj.name='@tableName' and scol.name='@columnName'";
    SqlCommand command2 = new SqlCommand(propQuery,conn);
    SqlDataAdapter ad2 = new SqlDataAdapter(command2);
    System.Data.DataSet ds2 = new DataSet();
 #>

<# foreach(System.Data.DataRow row in schema.Rows) { #>
<# manager.StartBlock(row["TABLE_NAME"].ToString()+".cs"); #>
using System;

namespace Entity.Model
{
    /// <summary>
    /// <#= row["TABLE_NAME"].ToString() #>
    /// </summary>
    [Serializable]
    public class <#= row["TABLE_NAME"].ToString() #>
    {
        <#
        ds.Tables.Clear();
        command.CommandText = selectQuery.Replace("@tableName","["+row["TABLE_NAME"].ToString()+"]");
        ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());
        foreach (DataColumn dc in ds.Tables[0].Columns)
        {
        #>
            <#
            ds2.Tables.Clear();
            command2.CommandText = propQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
            command2.CommandText = command2.CommandText.Replace("@columnName",dc.ColumnName);
            ad2.Fill(ds2);
            #>

        ///<summary>
        ///<#=ds2.Tables[0].Rows[0].ItemArray[2]#>
        ///</summary>
        public <#= manager.TransFromSqlType(dc.DataType.Name) #> <#= dc.ColumnName #> { get; set; }
        <#}#>
    }
}

<# manager.EndBlock(); #>

<#}#>

<#manager.Process(true);#>